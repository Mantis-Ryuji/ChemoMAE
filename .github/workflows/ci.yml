name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Show versions (debug)
        run: |
          python -V
          pip -V

      - name: Upgrade pip & wheel
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: "1"
        run: |
          python -m pip install -U pip wheel

      - name: Install PyTorch (CPU)
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: "1"
        run: |
          python -m pip install --index-url https://download.pytorch.org/whl/cpu "torch>=2.2,<3"

      - name: Install project and test deps
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: "1"
        run: |
          # プロジェクト（開発用extrasを定義している前提）
          python -m pip install -e ".[dev]"
          # 念のため sklearn を明示（テストで必須）
          python -m pip install "scikit-learn>=1.2,<1.6"
          # 追加で使う可能性のあるツール
          python -m pip install "pytest>=7,<9" matplotlib

      - name: Show library versions (debug)
        run: |
          python - << 'PY'
          import sys, numpy, sklearn, torch
          print("Python :", sys.version)
          print("NumPy  :", numpy.__version__)
          print("sklearn:", sklearn.__version__)
          print("Torch  :", torch.__version__, "(CUDA available:", torch.cuda.is_available(), ")")
          PY

      - name: Run tests
        env:
          MPLBACKEND: Agg
        run: |
          pytest -q -ra
