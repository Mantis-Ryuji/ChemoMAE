name: Publish (PyPI)

on:
  push:
    tags:
      - 'v*.*.*'       # e.g., v0.1.0, v1.2.3  (※ rc は別ワークフローへ)

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install build twine tomli

      - name: Check tag vs pyproject version (release must match exactly)
        run: |
          TAG="${GITHUB_REF_NAME#v}"            # e.g. 0.1.0
          PYVER=$(
          python - <<'PY'
          import tomli, pathlib
          data = tomli.loads(pathlib.Path("pyproject.toml").read_text(encoding="utf-8"))
          print(data["project"]["version"])
          PY
          )
          echo "Tag: $TAG  pyproject: $PYVER"
          [ "$TAG" = "$PYVER" ] || { echo "Version mismatch: $TAG (tag) != $PYVER (pyproject)"; exit 1; }

      - name: Build sdist & wheel
        run: python -m build

      - name: Twine check
        run: twine check dist/*

      - name: Upload dist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-pypi
          path: dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
